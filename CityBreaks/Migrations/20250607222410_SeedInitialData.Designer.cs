// <auto-generated />
using CityBreaks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityBreaks.Migrations
{
    [DbContext(typeof(CityBreaksContext))]
    [Migration("20250607222410_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("CityBreaks.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CityName");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "Beijing"
                        });
                });

            modelBuilder.Entity("CityBreaks.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryName");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "BRA",
                            CountryName = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "FRA",
                            CountryName = "Franca"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "ALE",
                            CountryName = "Alemanha"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "RUS",
                            CountryName = "Russia"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "CHI",
                            CountryName = "China"
                        });
                });

            modelBuilder.Entity("CityBreaks.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("PropertyName");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Copacabana Palace",
                            PricePerNight = 500m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Ipanema Casa de Praia",
                            PricePerNight = 350m
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Torre Eiffel",
                            PricePerNight = 450m
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Name = "Apartamento Louvre",
                            PricePerNight = 400m
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Name = "Brandenburg Suite",
                            PricePerNight = 380m
                        },
                        new
                        {
                            Id = 6,
                            CityId = 4,
                            Name = "Red Square Hotel",
                            PricePerNight = 300m
                        },
                        new
                        {
                            Id = 7,
                            CityId = 5,
                            Name = "Great Wall Resort",
                            PricePerNight = 420m
                        });
                });

            modelBuilder.Entity("CityBreaks.Models.City", b =>
                {
                    b.HasOne("CityBreaks.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CityBreaks.Models.Property", b =>
                {
                    b.HasOne("CityBreaks.Models.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityBreaks.Models.City", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("CityBreaks.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
